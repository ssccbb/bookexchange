apply plugin: 'com.android.application'

//获取当前系统的时间
def releaseTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    def app_name = "bookex"

    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.sung.bookexchange"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }

    signingConfigs {
        debug {
            storeFile file("../extras/keystore/sung723.jks")
            keyAlias 'sung723'
            keyPassword '646693'
            storePassword '646693'
        }

        release {
            storeFile file("../extras/keystore/sung723.jks")
            keyAlias 'sung723'
            keyPassword '646693'
            storePassword '646693'
        }
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'Sever', '""'
            System.out.println("buildDebug-----------------------------------------------------------")

            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField 'String', 'Sever', '""'
            System.out.println("buildRelease-----------------------------------------------------------")

            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        if (variant.name.endsWith("Release") || variant.name.endsWith("release")) {
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName
                    fileName = "${app_name}_${name}_Release_${defaultConfig.versionName}_${releaseTime()}" + ".apk"
                    outputFileName = fileName
                }
            }
        } else {
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName
                    fileName = "${app_name}_${name}_Debug_${defaultConfig.versionName}_${releaseTime()}" + ".apk"
                    outputFileName = fileName
                }
            }
        }

    }

    allprojects {
        repositories {
            maven { url 'https://jitpack.io' }
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
        jumboMode true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    productFlavors {
        //默认包
        original {
            versionCode rootProject.versionCode
            versionName rootProject.versionName
            manifestPlaceholders = [CHANNEL_VALUE: name]
        }
        //渠道及马甲包配置
        googleplay {
            //指定这个渠道的版本号
            versionCode 2
            versionName "1.2"
            //指定区别于其他渠道的 applicationId
            applicationId "com.sung.bookexchange.gp"
            manifestPlaceholders = [CHANNEL_VALUE: name]
        }
        yingyongbao {//腾讯应用宝
            versionCode 3
            versionName "1.3"
            applicationId "com.sung.bookexchange.yyb"
            manifestPlaceholders = [CHANNEL_VALUE: name]
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'org.jetbrains:annotations:15.0'
    testImplementation 'junit:junit:4.12'
    /* butterknife */
    implementation 'com.jakewharton:butterknife:9.0.0-rc1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc1'
    /* eventbus */
    implementation 'org.greenrobot:eventbus:3.1.1'
    /* fresco */
    implementation 'com.facebook.fresco:fresco:1.11.0'
    /* gson */
    implementation 'com.google.code.gson:gson:2.8.2'
    /* retrofit */
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    /* basequickadapter */
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'
    /* mzbanner */
    implementation 'com.github.pinguo-zhouwei:MZBannerView:v2.0.2'
    /* websocket */
//    implementation "org.java-websocket:Java-WebSocket:1.4.0"
    /* socketio */
//    compile ('io.socket:socket.io-client:0.8.3') {
//        exclude group: 'org.json', module: 'json'
//    }

    implementation project(':net')
    implementation project(':common')
}
